services:

  firefox:
    image: selenium/standalone-firefox:4.16.1-20231219
    restart: on-failure
    container_name: firefox
    shm_size: 2g
    ports:
      - "4444:4444"
      - "7900:7900"
    networks:
      - common-network
    volumes:
      - selenium-data:/home/seluser/Downloads
    environment:
      - SE_SESSION_REQUEST_TIMEOUT=3600
      - SE_NODE_SESSION_TIMEOUT=3600
      - SE_VNC_PASSWORD=1234
      - SE_NODE_OVERRIDE_MAX_SESSIONS=true 
      - SE_NODE_MAX_SESSIONS=5
  #   deploy:
  #     resources:
  #       limits:
  #         cpus: '0.4'

  django_fastapi:
    build: .
    pull_policy: build
    restart: on-failure
    networks:
      - common-network
    environment:
      - POSTGRES_HOST=psql_db
      - SELENIUM_DRIVER=firefox
      - REDIS_HOST=redis_db
    env_file:
      - ./.env
    # container_name: django_fastapi
    depends_on:
      - psql_db
      # - redis_db
      # - celery_worker
      - firefox
    logging:
      driver: "json-file"
      options:
          max-size: "20m"
    volumes:
      - static:/app/staticfiles
      - media:/app/media
    command: sh -c "python manage.py makemigrations &&
                    python manage.py migrate &&
                    python manage.py collectstatic --no-input &&
                    gunicorn -w 4 -k uvicorn.workers.UvicornWorker project.asgi:app --bind 0.0.0.0:8000"
                    # uvicorn project.asgi:app --host 0.0.0.0"
                    # python manage.py loaddata media/base_db.json &&
                    # python manage.py loaddata media/countries.json &&
                    # python manage.py create_popular_directions_group &&
                    # python manage.py create_periodic_task_for_delete_reviews &&
                    # python manage.py create_cities &&
                    # python manage.py create_moderator_group &&
                    # python manage.py periodic_task_for_parse_cash_courses &&
                    # python manage.py createsuperuser --no-input &&
                    # python manage.py parse_reviews_selenium &&

  nginx:
    build: ./nginx
    restart: on-failure
    container_name: nginx
    networks:
      - common-network
    volumes:
      - static:/static
      - media:/media
    ports:
      # - '81:80'
      - '80:80'
    depends_on:
      - django_fastapi
    logging:
      driver: "json-file"
      options:
          max-size: "20m"

  redis_db:
    image: redis:latest
    restart: on-failure
    networks:
      - common-network
    # ports:
    #   - 6379:6379
    env_file:
      - ./.env
    command: redis-server --requirepass ${REDIS_PASSWORD} --save "" --appendonly no
    # sh -c "echo 1 > /proc/sys/vm/overcommit_memory && redis-server --save 900 1 --loglevel warning"
    volumes:
      - redis_data:/data
    logging:
      driver: "json-file"
      options:
          max-size: "20m"

  # rabbitmq3:
  #   image: rabbitmq:management
  #   ports:
  #     - '5672:5672'
  #     - '15672:15672'
  #   volumes:
  #     - rabbitmq_data:/var/lib/rabbitmq
  #   logging:
  #     driver: "json-file"
  #     options:
  #         max-size: "20m"
  #   networks:
  #     - common-network

  celery_worker:
    build: .
    pull_policy: build
    restart: on-failure
    networks:
      - common-network
    command: sh -c 'celery -A project worker -l info -c 20 -Ofair'
    environment:
      - POSTGRES_HOST=psql_db
      - SELENIUM_DRIVER=firefox
      - REDIS_HOST=redis_db
    env_file:
      - ./.env
    depends_on:
      - redis_db
      - psql_db
      # - rabbitmq3
    logging:
      driver: "json-file"
      options:
          max-size: "20m"
    deploy:
      resources:
        limits:
          cpus: '2.0'
          memory: 2GiB


  celery_beat:
    build: .
    pull_policy: build
    restart: on-failure
    networks:
      - common-network
    command: sh -c 'celery -A project beat -l INFO --scheduler django_celery_beat.schedulers:DatabaseScheduler'
    environment:
      - POSTGRES_HOST=psql_db
      - REDIS_HOST=redis_db
    env_file:
      - ./.env
    depends_on:
      - redis_db
      - psql_db
      - celery_worker
      # - rabbitmq3
    logging:
      driver: "json-file"
      options:
          max-size: "20m"

  flower:
    build: .
    command: sh -c 'celery -A project flower'
    networks:
      - common-network
    environment:
      - POSTGRES_HOST=psql_db
      - SELENIUM_DRIVER=firefox
      - REDIS_HOST=redis_db
    env_file:
      - ./.env
    volumes:
      - flower_data:/data
    ports:
      - '5554:5555'

  psql_db:
    image: postgres:14
    restart: on-failure
    networks:
      - common-network
    # ports:
    #   - '5432:5432'
    env_file:
      - ./.env
    volumes:
      - postgres-data:/var/lib/postgresql/data
    command: postgres -c max_connections=200
    logging:
      driver: "json-file"
      options:
          max-size: "20m"

volumes:
  selenium-data:
  postgres-data:
  redis_data:
  # rabbitmq_data:
  flower_data:
  static:
  media:

networks:
  common-network:
    driver: bridge