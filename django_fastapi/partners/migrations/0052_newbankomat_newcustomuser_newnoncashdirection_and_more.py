# Generated by Django 4.2.7 on 2025-10-05 14:15

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('no_cash', '0037_newdirection_newexchangedirection_and_more'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('cash', '0038_newdirection_city_popular_count_newexchangedirection_and_more'),
        ('general_models', '0027_admincomment_comment_exchanger_and_more'),
        ('partners', '0051_alter_countrydirection_direction_and_more'),
    ]

    operations = [
        migrations.CreateModel(
            name='NewBankomat',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, unique=True, verbose_name='Название')),
                ('icon_url', models.FileField(blank=True, default='icons/country/russia.svg', null=True, upload_to='icons/bankomat/', verbose_name='Иконка банкомата')),
                ('valutes', models.ManyToManyField(blank=True, limit_choices_to=models.Q(('type_valute', 'ATM QR')), related_name='bankomats', to='general_models.newvalute', verbose_name='Валюты')),
            ],
            options={
                'verbose_name': 'Банкомат (новый)',
                'verbose_name_plural': 'Банкоматы (новые)',
            },
        ),
        migrations.CreateModel(
            name='NewCustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('refresh_token', models.CharField(default=None, max_length=255, null=True, verbose_name='Рефреш токен')),
                ('exchange', models.OneToOneField(blank=True, default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='account', to='general_models.exchanger', verbose_name='Партнёрский обменник')),
                ('user', models.OneToOneField(limit_choices_to=models.Q(('is_superuser', False)), on_delete=django.db.models.deletion.CASCADE, related_name='new_moderator_account', to=settings.AUTH_USER_MODEL, verbose_name='Пользователь')),
            ],
            options={
                'verbose_name': 'Администратор обменника',
                'verbose_name_plural': 'Администраторы обменников',
            },
        ),
        migrations.CreateModel(
            name='NewNonCashDirection',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('min_amount', models.FloatField(blank=True, default=None, null=True, verbose_name='Минимальное количество')),
                ('max_amount', models.FloatField(blank=True, default=None, null=True, verbose_name='Максимальное количество')),
                ('in_count', models.DecimalField(decimal_places=5, default=None, max_digits=20, null=True, verbose_name='Сколько отдаём')),
                ('out_count', models.DecimalField(decimal_places=5, default=None, max_digits=20, null=True, verbose_name='Сколько получаем')),
                ('time_update', models.DateTimeField(auto_now_add=True, help_text='Время указано по московскому часовому поясу. При не обновлении процентов или фикс. ставки в течении 3 дней, направление становится неактивным.', verbose_name='Последнее обновление')),
                ('is_active', models.BooleanField(default=True, verbose_name='Активно?')),
                ('direction', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='partner_directions', to='no_cash.newdirection', verbose_name='Направление')),
                ('exchange', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='noncash_directions', to='general_models.exchanger', verbose_name='Обменник')),
            ],
            options={
                'verbose_name': 'Безналичное направление',
                'verbose_name_plural': 'Безналичные направления',
                'ordering': ('exchange', 'direction'),
                'unique_together': {('exchange', 'direction')},
            },
        ),
        migrations.CreateModel(
            name='NewPartnerCountry',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('has_delivery', models.BooleanField(default=False, verbose_name='Есть ли доставка?')),
                ('has_office', models.BooleanField(default=False, verbose_name='Есть ли офис?')),
                ('time_from', models.CharField(default=None, max_length=50, null=True, verbose_name='Работаем с ')),
                ('time_to', models.CharField(default=None, max_length=50, null=True, verbose_name='Работаем до ')),
                ('weekend_time_from', models.CharField(default=None, max_length=50, null=True, verbose_name='Работаем с (выходные)')),
                ('weekend_time_to', models.CharField(default=None, max_length=50, null=True, verbose_name='Работаем до (выходные)')),
                ('time_update', models.DateTimeField(blank=True, default=None, null=True, verbose_name='Время последнего обновления')),
                ('max_amount', models.FloatField(blank=True, default=None, null=True, verbose_name='Максимальное количество')),
                ('min_amount', models.FloatField(blank=True, default=None, null=True, verbose_name='Минимальное количество')),
                ('country', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='new_partner_countries', to='cash.country')),
                ('exchange', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='partner_countries', to='general_models.exchanger')),
                ('exclude_cities', models.ManyToManyField(blank=True, null=True, to='cash.city', verbose_name='Исключить города из выдачи')),
                ('working_days', models.ManyToManyField(blank=True, related_name='new_working_days_counrties', to='partners.workingday', verbose_name='Рабочие дни')),
            ],
            options={
                'verbose_name': 'Партнёрская страна',
                'verbose_name_plural': 'Партнёрские страны',
                'ordering': ('exchange', 'country'),
                'unique_together': {('exchange', 'country')},
            },
        ),
        migrations.CreateModel(
            name='NewPartnerCity',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('has_delivery', models.BooleanField(default=False, verbose_name='Есть ли доставка?')),
                ('has_office', models.BooleanField(default=False, verbose_name='Есть ли офис?')),
                ('time_from', models.CharField(default=None, max_length=50, null=True, verbose_name='Работаем с ')),
                ('time_to', models.CharField(default=None, max_length=50, null=True, verbose_name='Работаем до ')),
                ('weekend_time_from', models.CharField(default=None, max_length=50, null=True, verbose_name='Работаем с (выходные)')),
                ('weekend_time_to', models.CharField(default=None, max_length=50, null=True, verbose_name='Работаем до (выходные)')),
                ('time_update', models.DateTimeField(blank=True, default=None, null=True, verbose_name='Время последнего обновления')),
                ('max_amount', models.FloatField(blank=True, default=None, null=True, verbose_name='Максимальное количество')),
                ('min_amount', models.FloatField(blank=True, default=None, null=True, verbose_name='Минимальное количество')),
                ('city', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='new_partner_cities', to='cash.city', verbose_name='Город')),
                ('exchange', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='partner_cities', to='general_models.exchanger')),
                ('working_days', models.ManyToManyField(blank=True, related_name='new_working_days_cities', to='partners.workingday', verbose_name='Рабочие дни')),
            ],
            options={
                'verbose_name': 'Партнёрский город',
                'verbose_name_plural': 'Партнёрские города',
                'ordering': ('exchange', 'city'),
                'unique_together': {('exchange', 'city')},
            },
        ),
        migrations.CreateModel(
            name='NewDirection',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('min_amount', models.FloatField(blank=True, default=None, null=True, verbose_name='Минимальное количество')),
                ('max_amount', models.FloatField(blank=True, default=None, null=True, verbose_name='Максимальное количество')),
                ('in_count', models.DecimalField(decimal_places=5, default=None, max_digits=20, null=True, verbose_name='Сколько отдаём')),
                ('out_count', models.DecimalField(decimal_places=5, default=None, max_digits=20, null=True, verbose_name='Сколько получаем')),
                ('time_update', models.DateTimeField(auto_now_add=True, help_text='Время указано по московскому часовому поясу. При не обновлении процентов или фикс. ставки в течении 3 дней, направление становится неактивным.', verbose_name='Последнее обновление')),
                ('is_active', models.BooleanField(default=True, verbose_name='Активно?')),
                ('city', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='partner_directions', to='partners.newpartnercity', verbose_name='Город')),
                ('direction', models.ForeignKey(blank=True, limit_choices_to=models.Q(models.Q(('valute_from__type_valute', 'Криптовалюта'), ('valute_to__type_valute', 'Наличные')), models.Q(('valute_from__type_valute', 'Наличные'), ('valute_to__type_valute', 'Криптовалюта')), models.Q(('valute_from__type_valute', 'Наличные'), ('valute_to__type_valute', 'Наличные')), models.Q(('valute_from__type_valute', 'Банкинг'), ('valute_to__type_valute', 'Наличные')), models.Q(('valute_from__type_valute', 'Банкинг'), ('valute_to__type_valute', 'ATM QR')), _connector='OR'), null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='partner_directions', to='cash.newdirection', verbose_name='Направление')),
                ('exchange', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='city_directions', to='general_models.exchanger', verbose_name='Обменник')),
            ],
            options={
                'verbose_name': 'Направление',
                'verbose_name_plural': 'Направления',
                'ordering': ('city__exchange', 'city', 'direction'),
                'unique_together': {('city', 'direction')},
            },
        ),
        migrations.CreateModel(
            name='NewCountryDirection',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('min_amount', models.FloatField(blank=True, default=None, null=True, verbose_name='Минимальное количество')),
                ('max_amount', models.FloatField(blank=True, default=None, null=True, verbose_name='Максимальное количество')),
                ('in_count', models.DecimalField(decimal_places=5, default=None, max_digits=20, null=True, verbose_name='Сколько отдаём')),
                ('out_count', models.DecimalField(decimal_places=5, default=None, max_digits=20, null=True, verbose_name='Сколько получаем')),
                ('time_update', models.DateTimeField(auto_now_add=True, help_text='Время указано по московскому часовому поясу. При не обновлении процентов или фикс. ставки в течении 3 дней, направление становится неактивным.', verbose_name='Последнее обновление')),
                ('is_active', models.BooleanField(default=True, verbose_name='Активно?')),
                ('country', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='partner_directions', to='partners.newpartnercountry', verbose_name='Страна')),
                ('direction', models.ForeignKey(blank=True, limit_choices_to=models.Q(models.Q(('valute_from__type_valute', 'Криптовалюта'), ('valute_to__type_valute', 'Наличные')), models.Q(('valute_from__type_valute', 'Наличные'), ('valute_to__type_valute', 'Криптовалюта')), models.Q(('valute_from__type_valute', 'Наличные'), ('valute_to__type_valute', 'Наличные')), models.Q(('valute_from__type_valute', 'Банкинг'), ('valute_to__type_valute', 'Наличные')), models.Q(('valute_from__type_valute', 'Банкинг'), ('valute_to__type_valute', 'ATM QR')), _connector='OR'), null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='partner_country_directions', to='cash.newdirection', verbose_name='Направление')),
                ('exchange', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='country_directions', to='general_models.exchanger', verbose_name='Обменник')),
            ],
            options={
                'verbose_name': 'Направление страны',
                'verbose_name_plural': 'Направления страны',
                'ordering': ('country__exchange', 'country', 'direction'),
                'unique_together': {('country', 'direction')},
            },
        ),
        migrations.CreateModel(
            name='NewQRValutePartner',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('bankomats', models.ManyToManyField(blank=True, to='partners.newbankomat', verbose_name='Банкоматы')),
                ('partner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='partners.newcustomuser', verbose_name='Партнёр')),
                ('valute', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='general_models.newvalute', verbose_name='Валюта')),
            ],
            options={
                'unique_together': {('partner', 'valute')},
            },
        ),
        migrations.CreateModel(
            name='NewNonCashExchangeLinkCount',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('count', models.PositiveBigIntegerField(default=0, verbose_name='Счетчик просмотров')),
                ('exchange', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='exchange_no_cash_counts', to='general_models.exchanger', verbose_name='Обменник')),
                ('exchange_direction', models.ForeignKey(default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='no_cash_exchange_direction_counts', to='partners.newnoncashdirection', verbose_name='Готовое направление')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='new_partner_exchange_no_cash_counts', to='general_models.guest', verbose_name='Гостевой пользователь')),
            ],
            options={
                'verbose_name': 'Счётчик перехода по ссылке (безналичные) (новый)',
                'verbose_name_plural': 'Счётчики перехода по ссылкам (безналичные) (новые)',
                'unique_together': {('exchange', 'user', 'exchange_direction')},
            },
        ),
        migrations.CreateModel(
            name='NewNonCashDirectionRate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('in_count', models.DecimalField(decimal_places=5, default=None, max_digits=20, null=True, verbose_name='Сколько отдаём')),
                ('out_count', models.DecimalField(decimal_places=5, default=None, max_digits=20, null=True, verbose_name='Сколько получаем')),
                ('min_rate_limit', models.FloatField(verbose_name='Минимальный лимит')),
                ('max_rate_limit', models.FloatField(blank=True, default=None, null=True, verbose_name='Максимальный лимит')),
                ('rate_coefficient', models.FloatField(default=None, null=True, verbose_name='Коэффициент разницы курса от объема')),
                ('exchange', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='exchange_no_cash_rates', to='general_models.exchanger', verbose_name='Обменник')),
                ('exchange_direction', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='direction_rates', to='partners.newnoncashdirection', verbose_name='Готовое направление')),
            ],
            options={
                'verbose_name': 'Объём направления (безналичные) (новый)',
                'verbose_name_plural': 'Объёмы направлений (безналичные) (новые)',
                'unique_together': {('exchange', 'exchange_direction', 'min_rate_limit')},
            },
        ),
        migrations.CreateModel(
            name='NewExchangeLinkCount',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('count', models.PositiveBigIntegerField(default=0, verbose_name='Счетчик просмотров')),
                ('exchange', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='partner_city_exchange_counts', to='general_models.exchanger', verbose_name='Обменник')),
                ('exchange_direction', models.ForeignKey(default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='exchange_direction_counts', to='partners.newdirection', verbose_name='Готовое направление')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='new_partner_exchange_counts', to='general_models.guest', verbose_name='Гостевой пользователь')),
            ],
            options={
                'verbose_name': 'Счётчик перехода по ссылке (новый)',
                'verbose_name_plural': 'Счётчики перехода по ссылкам (новые)',
                'unique_together': {('exchange', 'user', 'exchange_direction')},
            },
        ),
        migrations.CreateModel(
            name='NewDirectionRate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('in_count', models.DecimalField(decimal_places=5, default=None, max_digits=20, null=True, verbose_name='Сколько отдаём')),
                ('out_count', models.DecimalField(decimal_places=5, default=None, max_digits=20, null=True, verbose_name='Сколько получаем')),
                ('min_rate_limit', models.FloatField(verbose_name='Минимальный лимит')),
                ('max_rate_limit', models.FloatField(blank=True, default=None, null=True, verbose_name='Максимальный лимит')),
                ('rate_coefficient', models.FloatField(default=None, null=True, verbose_name='Коэффициент разницы курса от объема')),
                ('exchange', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='exchange_city_rates', to='general_models.exchanger', verbose_name='Обменник')),
                ('exchange_direction', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='direction_rates', to='partners.newdirection', verbose_name='Готовое направление')),
            ],
            options={
                'verbose_name': 'Объём направления (новый)',
                'verbose_name_plural': 'Объёмы направлений (новые)',
                'unique_together': {('exchange', 'exchange_direction', 'min_rate_limit')},
            },
        ),
        migrations.CreateModel(
            name='NewCountryExchangeLinkCount',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('count', models.PositiveBigIntegerField(default=0, verbose_name='Счетчик просмотров')),
                ('exchange', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='exchange_country_counts', to='general_models.exchanger', verbose_name='Обменник')),
                ('exchange_direction', models.ForeignKey(default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='country_exchange_direction_counts', to='partners.newcountrydirection', verbose_name='Готовое направление')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='new_partner_exchange_country_counts', to='general_models.guest', verbose_name='Гостевой пользователь')),
            ],
            options={
                'verbose_name': 'Счётчик перехода по ссылке (страны) (новый)',
                'verbose_name_plural': 'Счётчики перехода по ссылкам (страны) (новые)',
                'unique_together': {('exchange', 'user', 'exchange_direction')},
            },
        ),
        migrations.CreateModel(
            name='NewCountryDirectionRate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('in_count', models.DecimalField(decimal_places=5, default=None, max_digits=20, null=True, verbose_name='Сколько отдаём')),
                ('out_count', models.DecimalField(decimal_places=5, default=None, max_digits=20, null=True, verbose_name='Сколько получаем')),
                ('min_rate_limit', models.FloatField(verbose_name='Минимальный лимит')),
                ('max_rate_limit', models.FloatField(blank=True, default=None, null=True, verbose_name='Максимальный лимит')),
                ('rate_coefficient', models.FloatField(default=None, null=True, verbose_name='Коэффициент разницы курса от объема')),
                ('exchange', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='exchange_country_rates', to='general_models.exchanger', verbose_name='Обменник')),
                ('exchange_direction', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='direction_rates', to='partners.newcountrydirection', verbose_name='Готовое направление')),
            ],
            options={
                'verbose_name': 'Объём направления (страны) (новый)',
                'verbose_name_plural': 'Объёмы направлений (страны) (новые)',
                'unique_together': {('exchange', 'exchange_direction', 'min_rate_limit')},
            },
        ),
    ]
