# Generated by Django 4.2.7 on 2025-10-05 14:15

import datetime
from django.db import migrations, models
import django.db.models.deletion
import general_models.utils.model_validators


class Migration(migrations.Migration):

    dependencies = [
        ('general_models', '0026_exchangeadmin_notification'),
    ]

    operations = [
        migrations.CreateModel(
            name='AdminComment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.TextField(verbose_name='Текст сообщения')),
                ('time_create', models.DateTimeField(blank=True, default=None, help_text='Если оставить поля пустыми, время установится автоматически по московскому часовому поясу', null=True, verbose_name='Дата создания')),
            ],
            options={
                'verbose_name': 'Комментарий администрации',
                'verbose_name_plural': 'Комментарии администрации',
            },
        ),
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('username', models.CharField(blank=True, default=None, max_length=255, null=True, verbose_name='Имя пользователя')),
                ('text', models.TextField(verbose_name='Текст сообщения')),
                ('time_create', models.DateTimeField(blank=True, default=None, help_text='Если оставить поля пустыми, время установится автоматически по московскому часовому поясу', null=True, verbose_name='Дата создания')),
                ('status', models.CharField(choices=[('Опубликован', 'Опубликован'), ('Модерация', 'Модерация'), ('Отклонён', 'Отклонён')], default='Модерация', help_text='При выборе статуса "Отклонён" попадает в очередь на удаление', max_length=20, verbose_name='Статус модерации')),
                ('moderation', models.BooleanField(default=False, verbose_name='Прошел модерацию?')),
                ('grade', models.CharField(choices=[('1', 'Положительный'), ('0', 'Нейтральный'), ('-1', 'Отрицательный')], default='0', verbose_name='Оценка')),
                ('review_from', models.CharField(choices=[('bestchange', 'bestchange'), ('moneyswap', 'moneyswap')], default='moneyswap', max_length=50, verbose_name='Откуда отзыв')),
            ],
            options={
                'verbose_name': 'Комментарий',
                'verbose_name_plural': 'Комментарии',
            },
        ),
        migrations.CreateModel(
            name='Exchanger',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, unique=True, verbose_name='Название обменника(ru)')),
                ('en_name', models.CharField(blank=True, default=None, max_length=255, null=True, unique=True, verbose_name='Название обменника(en)')),
                ('partner_link', models.CharField(max_length=255, verbose_name='Партнёрская ссылка')),
                ('is_active', models.BooleanField(default=True, verbose_name='Статус обменника')),
                ('active_status', models.CharField(choices=[('Cостояния для изменения', [('active', 'Активный'), ('disabled', 'Отключен'), ('scam', 'Скам'), ('skip', 'Не попадает ни в одну выдачу')]), ('Служебные состояния', [('inactive', 'Неактивный'), ('timeout error', 'Ошибка по таймауту'), ('robot check error', 'Ошибка проверки на робота')])], default='active', max_length=255, verbose_name='Новый статус обменника')),
                ('is_vip', models.BooleanField(default=False, verbose_name='VIP')),
                ('course_count', models.CharField(blank=True, default=None, max_length=255, null=True, verbose_name='Количество курсов для обмена')),
                ('reserve_amount', models.CharField(blank=True, default=None, max_length=255, null=True, verbose_name='Сумма резерва')),
                ('age', models.DateField(blank=True, default=None, null=True, verbose_name='Дата открытия обменника')),
                ('time_create', models.DateTimeField(blank=True, default=None, null=True, verbose_name='Дата добавления в мониторинг')),
                ('time_disable', models.DateTimeField(blank=True, default=None, null=True, verbose_name='Дата отключения')),
                ('country', models.CharField(blank=True, default=None, max_length=255, null=True, verbose_name='Страна')),
                ('icon_url', models.FileField(blank=True, default='icons/exchange/empty_icon.svg', null=True, upload_to='icons/exchange/', verbose_name='Иконка обменника')),
                ('high_aml', models.BooleanField(default=False, verbose_name='Высокий AML риск?')),
                ('xml_url', models.CharField(blank=True, default=None, max_length=255, null=True, verbose_name='Ссылка на XML файл')),
                ('period_for_create', models.IntegerField(blank=True, default=90, help_text='Значение - положительное целое число.При установлении в 0, останавливает периодическую задачу', null=True, validators=[general_models.utils.model_validators.is_positive_validate], verbose_name='Частота периодической задачи в секундах')),
                ('timeout', models.IntegerField(blank=True, default=None, help_text='Значение должно быть больше 0 и не больше 15', null=True, validators=[general_models.utils.model_validators.custom_timeout_validate], verbose_name='Кастомный таймаут')),
            ],
            options={
                'verbose_name': 'Обменник (новый)',
                'verbose_name_plural': 'Обменники (новые)',
                'ordering': ['name'],
            },
        ),
        migrations.AlterModelOptions(
            name='newbasereview',
            options={'verbose_name': 'Отзыв (новый)', 'verbose_name_plural': 'Отзывы (новые)'},
        ),
        migrations.CreateModel(
            name='Review',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('username', models.CharField(blank=True, default=None, max_length=255, null=True, verbose_name='Имя пользователя')),
                ('text', models.TextField(verbose_name='Текст сообщения')),
                ('time_create', models.DateTimeField(blank=True, default=None, help_text='Если оставить поля пустыми, время установится автоматически по московскому часовому поясу', null=True, verbose_name='Дата создания')),
                ('status', models.CharField(choices=[('Опубликован', 'Опубликован'), ('Модерация', 'Модерация'), ('Отклонён', 'Отклонён')], default='Модерация', help_text='При выборе статуса "Отклонён" попадает в очередь на удаление', max_length=20, verbose_name='Статус модерации')),
                ('moderation', models.BooleanField(default=False, verbose_name='Прошел модерацию?')),
                ('grade', models.CharField(choices=[('1', 'Положительный'), ('0', 'Нейтральный'), ('-1', 'Отрицательный')], default='0', verbose_name='Оценка')),
                ('review_from', models.CharField(choices=[('bestchange', 'bestchange'), ('moneyswap', 'moneyswap')], default='moneyswap', max_length=50, verbose_name='Откуда отзыв')),
                ('transaction_id', models.CharField(blank=True, default=None, null=True, verbose_name='Номер транзакции')),
                ('exchange', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='reviews', to='general_models.exchanger', verbose_name='Обменник')),
                ('guest', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='new_reviews', to='general_models.guest', verbose_name='Гостевой пользователь')),
            ],
            options={
                'verbose_name': 'Отзыв',
                'verbose_name_plural': 'Отзывы',
            },
        ),
        migrations.CreateModel(
            name='NewValute',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, unique=True, verbose_name='Название валюты(ru)')),
                ('en_name', models.CharField(default=None, max_length=50, null=True, unique=True, verbose_name='Название валюты(en)')),
                ('code_name', models.CharField(max_length=10, unique=True, verbose_name='Кодовое сокращение')),
                ('type_valute', models.CharField(choices=[('Криптовалюта', 'Криптовалюта'), ('Эл. деньги', 'Эл. деньги'), ('Балансы криптобирж', 'Балансы криптобирж'), ('Банкинг', 'Банкинг'), ('Денежные переводы', 'Денежные переводы'), ('Наличные', 'Наличные'), ('ATM QR', 'ATM QR')], max_length=30, verbose_name='Тип валюты')),
                ('icon_url', models.FileField(upload_to='icons/valute/', verbose_name='Иконка валюты')),
                ('available_for_partners', models.BooleanField(default=False, verbose_name='Доступно для партнёров')),
                ('is_popular', models.BooleanField(default=False, verbose_name='Популярная')),
            ],
            options={
                'verbose_name': 'Валюта (новая)',
                'verbose_name_plural': 'Валюты (новые)',
                'ordering': ['code_name'],
                'indexes': [models.Index(fields=['code_name'], name='general_mod_code_na_9672ce_idx')],
            },
        ),
        migrations.CreateModel(
            name='NewExchangeAdminOrder',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user_id', models.BigIntegerField(verbose_name='Tg id пользователя')),
                ('moderation', models.BooleanField(default=False, verbose_name='Модерация')),
                ('time_create', models.DateTimeField(blank=True, default=datetime.datetime(2025, 10, 5, 14, 15, 56, 748969, tzinfo=datetime.timezone.utc), null=True, verbose_name='Время создания')),
                ('exchange', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='exchange_admin_orders', to='general_models.exchanger', verbose_name='Обменник')),
            ],
            options={
                'verbose_name': 'Заявка на подключение обменника к юзеру (новая)',
                'verbose_name_plural': 'Заявки на подключения обменников к юзерам (новые)',
            },
        ),
        migrations.CreateModel(
            name='NewExchangeAdmin',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('notification', models.BooleanField(default=True, verbose_name='Уведомления включены?')),
                ('exchange', models.OneToOneField(blank=True, default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='exchange_admin', to='general_models.exchanger', verbose_name='Обменник')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='new_linked_exchanges', to='general_models.guest', verbose_name='Пользователь')),
            ],
            options={
                'verbose_name': 'Подключенный обменник к юзеру (новый)',
                'verbose_name_plural': 'Подключенные обменники к юзерам (новые)',
            },
        ),
        migrations.CreateModel(
            name='LinkedUrl',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('url', models.CharField(max_length=255, verbose_name='Ссылка')),
                ('exchange', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='linked_url_list', to='general_models.exchanger', verbose_name='Обменник')),
            ],
            options={
                'verbose_name': 'Связанная ссылка',
                'verbose_name_plural': 'Связанные ссылки',
            },
        ),
        migrations.AddIndex(
            model_name='exchanger',
            index=models.Index(fields=['name'], name='general_mod_name_6576bb_idx'),
        ),
        migrations.AddIndex(
            model_name='exchanger',
            index=models.Index(fields=['en_name'], name='general_mod_en_name_1b9615_idx'),
        ),
        migrations.AddField(
            model_name='comment',
            name='guest',
            field=models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='new_comments', to='general_models.guest', verbose_name='Гостевой пользователь'),
        ),
        migrations.AddField(
            model_name='comment',
            name='review',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='comments', to='general_models.review', verbose_name='Отзыв'),
        ),
        migrations.AddField(
            model_name='admincomment',
            name='review',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='admin_comments', to='general_models.review', verbose_name='Отзыв'),
        ),
        migrations.AlterUniqueTogether(
            name='review',
            unique_together={('exchange', 'username', 'time_create')},
        ),
        migrations.AlterUniqueTogether(
            name='newexchangeadmin',
            unique_together={('user', 'exchange')},
        ),
        migrations.AlterUniqueTogether(
            name='comment',
            unique_together={('review', 'username', 'time_create')},
        ),
    ]
